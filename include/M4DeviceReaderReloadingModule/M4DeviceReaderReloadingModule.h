/////////////////////////////////////
/////////////////////////////////////
/////////////////////////////////////
// WARNING
// This file has been autogenerated.
// Do NOT make modifications directly to it as they will be overwritten!
/////////////////////////////////////
/////////////////////////////////////
/////////////////////////////////////

#ifndef M4DEVICEREADER_RELOADING_MODULE_H
#define M4DEVICEREADER_RELOADING_MODULE_H

#include <ComponentAPI.h>
#include <ApplicationListenerAPI.h>
#include <ComponentReloadingListenerAPI.h>
#include <HaptechDeviceAPI.h>
#include <MissionListenerAPI.h>
#include <WeaponSystemAspectListenerAPI.h>

GEARS_EXPORT void GEARS_API RegisterAPI_v6(APIManager_RegisterAPI_Func_v6 register_api);

GEARS_EXPORT APIResult GEARS_API Wrapper_Component_LoadComponent(_In_ HMODULE component_dll);
APIResult GEARS_API Wrapper_Component_Initialize(_In_ const char* component_folder);
APIResult GEARS_API Wrapper_Component_OnStart(_In_ APIManager_v6* api_manager, _In_ NativeModuleHandle proxy_handle);
APIResult GEARS_API Wrapper_Component_OnStop();
APIResult GEARS_API Wrapper_Component_Shutdown();
APIResult GEARS_API Wrapper_Component_IsParallelizable(_Out_ bool32_t* parallelizable);
APIResult GEARS_API Wrapper_Component_GetName(_Inout_ int32_t* name_length, _Out_opt_ char* name);
APIResult GEARS_API Wrapper_Component_GetVersion(_Inout_ int32_t* version_length, _Out_opt_ char* version);

void GEARS_API Wrapper_ApplicationListener_OnApplicationReady();
void GEARS_API Wrapper_ApplicationListener_OnBeforeUpdate(_In_ float32_t application_delta_time, _In_ float32_t simulation_delta_time);
void GEARS_API Wrapper_ApplicationListener_OnAfterUpdate(_In_ float32_t application_delta_time, _In_ float32_t simulation_delta_time);

APIResult GEARS_API Wrapper_ComponentReloadingListener_BeforeUnload();
APIResult GEARS_API Wrapper_ComponentReloadingListener_AfterReload(_In_ const char* component_folder);

APIResult GEARS_API Wrapper_HaptechDevice_GetM4DeviceUsingStringAddress(_Out_ void* device);

void GEARS_API Wrapper_MissionListener_OnMissionStart(_In_ bool32_t restart);
void GEARS_API Wrapper_MissionListener_OnMissionEnd(_In_ bool32_t restart);
void GEARS_API Wrapper_MissionListener_OnMissionLoad(_In_ const char* mission_name);
void GEARS_API Wrapper_MissionListener_OnMissionUnload(_In_ const char* mission_name);
void GEARS_API Wrapper_MissionListener_OnPlayerSwitchedUnits(_In_ ObjectHandle_v3 old_entity, _In_ ObjectHandle_v3 new_entity);
void GEARS_API Wrapper_MissionListener_OnBriefingShowRequest();
void GEARS_API Wrapper_MissionListener_OnBriefingHideRequest();

void GEARS_API Wrapper_WeaponSystemAspectListener_OnFire(_In_ ObjectHandle_v3 shooter_lifeform, _In_ ObjectHandle_v3 shooter_platform, _In_ ObjectHandle_v3 shooter_turret, _In_ ObjectHandle_v3 shot);
void GEARS_API Wrapper_WeaponSystemAspectListener_OnAmmoHit(_In_ const HitEvent_v3* hit_info);
void GEARS_API Wrapper_WeaponSystemAspectListener_OnWeaponChanged(_In_ ObjectHandle_v3 weapon_system_owner, _In_ int32_t previous_weapon_index, _In_ int32_t new_weapon_index);
void GEARS_API Wrapper_WeaponSystemAspectListener_OnMuzzleChanged(_In_ ObjectHandle_v3 weapon_system_owner, _In_ int32_t weapon_index, _In_ int32_t previous_muzzle_index, _In_ int32_t new_muzzle_index);
void GEARS_API Wrapper_WeaponSystemAspectListener_OnMagazineChanged(_In_ ObjectHandle_v3 weapon_system_owner, _In_ int32_t weapon_index, _In_ int32_t previous_magazine_index, _In_ int32_t new_magazine_index);
void GEARS_API Wrapper_WeaponSystemAspectListener_OnWeaponAddedOrRemoved(_In_ ObjectHandle_v3 weapon_system_owner, _In_ const char* weapon_name, _In_ int32_t count);
void GEARS_API Wrapper_WeaponSystemAspectListener_OnMagazineAddedOrRemoved(_In_ ObjectHandle_v3 weapon_system_owner, _In_ const char* magazine_name, _In_ int32_t count);
void GEARS_API Wrapper_WeaponSystemAspectListener_OnIncomingLaser(_In_ ObjectHandle_v3 lased_object, _In_ ObjectHandle_v3 laser_source, _In_ LaserType_v5 laser_type, _In_ int64_t lase_event_id, _In_ bool32_t end_of_lase_event, _In_ RotationalAngles_v3 laser_direction, _In_ GeoPosition_v5 laser_position, _In_ float32_t laser_cone_angle);
void GEARS_API Wrapper_WeaponSystemAspectListener_OnIncomingProjectile(_In_ ObjectHandle_v3 object, _In_ ObjectHandle_v3 projectile, _In_ float32_t distance, _In_ GeoPosition_v5 projectile_position, _In_ Vector3f32_v3 projectile_velocity, _In_ ObjectHandle_v3 shooter, _In_ bool32_t can_damage, _In_ GeoPosition_v5 projectile_origin_position);

#endif
